const socket = io();

let currentItemIndex;
let currentItemName; // –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø—Ä–µ–¥–º–µ—Ç–∞
let currentItemAveragePrice; // –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ä–µ–¥–Ω–µ–π —Ü–µ–Ω—ã –ø—Ä–µ–¥–º–µ—Ç–∞

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏
const modal = document.getElementById('price-modal');
const closeModal = document.querySelector('.close');
const submitPriceButton = document.getElementById('submit-price');
const priceInput = document.getElementById('price-input');

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Ü–µ–Ω
const priceHistoryModal = document.getElementById('price-history-modal');
const closePriceHistoryModal = document.querySelector('.close-history');
const priceHistoryDetails = document.getElementById('price-history-details');

const showAllItemsButton = document.getElementById('showAllItemsButton');
const itemsModal = document.getElementById('items-modal');
const closeItemsModal = document.getElementById('close-items-modal');
const itemsDetails = document.getElementById('items-details');

const questsModal = document.getElementById('quests-modal');
const showQuestsButton = document.getElementById('show-quests-button');
const closeQuestsButton = document.querySelector('.close-quests');
const questListDiv = document.getElementById('questList');

// –ó–∞–∫—Ä—ã—Ç–∏–µ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
window.onclick = (event) => {
    if (event.target === questsModal) {
        questsModal.style.display = 'none';
    } else if (event.target === itemsModal) {
        itemsModal.style.display = 'none';
    } else if (event.target === modal) {
        modal.style.display = 'none';
    } else if (event.target === priceHistoryModal) {
        priceHistoryModal.style.display = 'none';
    }
};

// –û—Ç–∫—Ä—ã—Ç–∏–µ –æ–∫–Ω–∞ —Å –∫–≤–µ—Å—Ç–∞–º–∏
showQuestsButton.onclick = () => {
    socket.emit('getPlayerQuests'); // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–≤–µ—Å—Ç—ã —É —Å–µ—Ä–≤–µ—Ä–∞
    questsModal.style.display = 'block';
};

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
closeQuestsButton.onclick = () => {
    questsModal.style.display = 'none';
};

// –ü–æ–ª—É—á–∞–µ–º –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–≤–µ—Å—Ç–æ–≤
socket.on('playerQuests', (quests) => {
    questListDiv.innerHTML = quests.map(quest => `
        <div class="quest-item">
            <h3>${quest.description}</h3>
            <p>Reward: ${quest.reward.gems} gems</p>
            <p>Status: ${quest.completed ? 'Completed' : 'In progress'}</p>
        </div>
    `).join('');
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤
const mergeItems = (itemName) => {
    const playerId = getCookie('playerId'); // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ playerId —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ cookie
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤
    socket.emit('mergeItems', { itemName });
};

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤
socket.on('mergeResult', (result) => {
    if (result.success) {
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –∏ –¥—Ä—É–≥–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è
        updateUI(result.updatedData);
        alert('Items merged successfully!');
    } else {
        alert(result.message || 'An error occurred while merging items.');
    }
});

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏
showAllItemsButton.onclick = () => {
    socket.emit('getAllItems');
    itemsModal.style.display = 'block';
};

let allItemsState = {}; // –õ–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
socket.on('allItems', (data) => {
    const { items, averagePrices } = data;

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤
    items.forEach(item => {
        if (!allItemsState[item]) {
            allItemsState[item] = {};
        }

        const newPrice = averagePrices[item].price;

        // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Ü–µ–Ω—É —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–π
        let priceChange = '';
        if (allItemsState[item].price !== undefined) {
            if (newPrice > allItemsState[item].price) {
                priceChange = '‚ÜóÔ∏è'; // –¶–µ–Ω–∞ —É–≤–µ–ª–∏—á–∏–ª–∞—Å—å
            } else if (newPrice < allItemsState[item].price) {
                priceChange = '‚ÜòÔ∏è'; // –¶–µ–Ω–∞ —É–º–µ–Ω—å—à–∏–ª–∞—Å—å
            }
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞
        allItemsState[item].price = newPrice;
        allItemsState[item].change = priceChange;
    });

    // –†–µ–Ω–¥–µ—Ä–∏–º —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
    renderItemsList();
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∞ —Å–ø–∏—Å–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
function renderItemsList() {
    itemsDetails.innerHTML = `
        <h3>Items List</h3>
        <ul>
            ${Object.keys(allItemsState).map(item => {
                const priceData = allItemsState[item];
                const priceText = priceData.price ? priceData.price.toFixed(1) + ' ü™ô' : 'N/A';
                const changeText = priceData.change || ''; // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–µ–ª–∫—É
                return `<li>${item} - Average Price: ${priceText} ${changeText}</li>`;
            }).join('')}
        </ul>
    `;
}

document.getElementById('toggle-inventory').addEventListener('click', () => {
    const inventoryDiv = document.getElementById('inventory');
    const toggleButton = document.getElementById('toggle-inventory');

    if (inventoryDiv.style.display === 'none') {
        inventoryDiv.style.display = 'block';
        toggleButton.textContent = 'Hide Inventory'; // –ú–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
    } else {
        inventoryDiv.style.display = 'none';
        toggleButton.textContent = 'Show Inventory'; // –ú–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
    }
});

closeModal.onclick = () => {
    modal.style.display = 'none';
};

closePriceHistoryModal.onclick = () => {
    priceHistoryModal.style.display = 'none';
};

submitPriceButton.onclick = () => {
    const sellPrice = parseInt(priceInput.value);
    if (!isNaN(sellPrice) && sellPrice > 0) {
        socket.emit('sell', { itemIndex: currentItemIndex, sellPrice });
        modal.style.display = 'none';
    } else {
        alert('Please enter a valid price.');
    }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —Ü–µ–Ω
const showPriceHistory = (itemName) => {
    socket.emit('getPriceHistory', itemName);
};

socket.on('priceHistory', (data) => {
    const { itemName, history, averagePrice } = data;
    priceHistoryDetails.innerHTML = `
        <h3>${itemName}</h3>
        <p>Average Price: ${parseFloat(averagePrice).toFixed(1)} gold</p>
        <ul>
            ${history.map(price => `<li>${parseFloat(price).toFixed(1)} gold</li>`).join('')}
        </ul>
    `;
    priceHistoryModal.style.display = 'block';
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
const updateUI = (data) => {
    document.getElementById('gold').textContent = `Gold: ${data.gold} ü™ô`;
    document.getElementById('gems').textContent = `Gems: ${data.gems} üíé`;
    document.getElementById('player-name').textContent = `Name: ${data.sellerName}`;
    document.getElementById('level').textContent = `Level: ${data.level}`;
    document.getElementById('experience').textContent = `Experience: ${data.experience}`;

    const inventoryDiv = document.getElementById('inventory');
    inventoryDiv.innerHTML = '<h2>Your Inventory</h2>';

    // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
    const itemCounts = {};

    // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤
    data.inventory.forEach((item) => {
        if (!itemCounts[item.name]) {
            itemCounts[item.name] = 0;
        }
        itemCounts[item.name]++;
    });

    data.inventory.forEach((item, index) => {
        const itemDiv = document.createElement('div');
        itemDiv.className = 'inventory-item';
        itemDiv.innerHTML = `
            <img src="${item.image}" alt="${item.name}" style="width: 30px; height: 30px;"/>
            ${item.name} - ${item.price} ü™ô (Level: ${item.level_item || 1})  <!-- –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ item.level_item -->
        `;

        const sellButton = document.createElement('button');
        sellButton.textContent = 'Sell';
        sellButton.onclick = () => {
            currentItemIndex = index;  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω–¥–µ–∫—Å –ø—Ä–µ–¥–º–µ—Ç–∞
            currentItemName = item.name;  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –ø—Ä–µ–¥–º–µ—Ç–∞
            currentItemAveragePrice = allItemsState[item.name]?.price || 'N/A'; // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ä–µ–¥–Ω—é—é —Ü–µ–Ω—É
            document.getElementById('modal-item-name').textContent = `Sell ${item.name}`;  // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞
            document.getElementById('modal-average-price').textContent = `Average Market Price: ${currentItemAveragePrice} ü™ô`; // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—Ä–µ–¥–Ω—é—é —Ü–µ–Ω—É
            priceInput.value = '';  // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
            modal.style.display = 'block';  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        };

        const historyButton = document.createElement('button');
        historyButton.textContent = 'Price History';
        historyButton.onclick = () => {
            showPriceHistory(item.name);
        };

        // –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å—Ç—å –ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è
        if (itemCounts[item.name] > 1) {
            const mergeButton = document.createElement('button');
            mergeButton.textContent = 'Merge';
            mergeButton.onclick = () => {
                mergeItems(item.name);
            };
            itemDiv.appendChild(mergeButton);
        }

        sellButton.style.marginLeft = '20px';
        itemDiv.appendChild(sellButton);
        itemDiv.appendChild(historyButton);
        inventoryDiv.appendChild(itemDiv);
    });
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –∏ –æ–ø—ã—Ç–∞
const displayPlayerStats = (playerData) => {
    document.getElementById('level').textContent = `Level: ${playerData.level} üßä`;
    document.getElementById('experience').textContent = `Experience: ${playerData.experience} üí´`;
};

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
socket.on('update', (data) => {
    updateUI(data);
    displayPlayerStats(data);
});

// –ü–æ–ª—É—á–µ–Ω–∏–µ cookie –ø–æ –∏–º–µ–Ω–∏
function getCookie(name) {
    const value = `; ${document.cookie}`;
    const parts = value.split(`; ${name}=`);
    if (parts.length === 2) return parts.pop().split(';').shift();
    return null; // –ï—Å–ª–∏ cookie –Ω–µ –Ω–∞–π–¥–µ–Ω
}

socket.on('setCookie', (data) => {
    document.cookie = `playerId=${data.playerId}; path=/`;
});

socket.on('init', (data) => {
    updateUI(data);
});

socket.on('error', (message) => {
    alert(message); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
});

socket.on('updateMarket', (marketItems) => {
    const marketDiv = document.getElementById('market-items');
    marketDiv.innerHTML = ''; // –æ—á–∏—â–∞–µ–º —Ä—ã–Ω–æ–∫

    const currentPlayerId = getCookie('playerId');

    marketItems.forEach((item, index) => {
        const itemDiv = document.createElement('div');
        itemDiv.className = item.seller === 'Special Offer' ? 'market-item special-offer' : 'market-item';
        itemDiv.innerHTML = `
            <span><img src="${item.image}" alt="${item.name}" style="width: 80px; height: 80px; float: left;"/>
            <span>${item.name} - ${item.price} ü™ô</span>
            ${item.seller === 'Special Offer' ? `<div>Base Price: ${item.basePrice} ü™ô</div><div>Discount: ${item.discount}%</div>` : ''}
            <div> (Seller: ${item.seller})</div>
            </span>
        `;

        if (item.seller !== currentPlayerId) {
            const buyButton = document.createElement('button');
            buyButton.className = 'buy-button';
            buyButton.textContent = 'Buy';
            buyButton.onclick = () => {
                socket.emit('buy', { itemIndex: index });
            };
            itemDiv.appendChild(buyButton);
        }

        marketDiv.appendChild(itemDiv);

        // –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –≤—Å—Ç–∞–≤–∫—É —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ DOM –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –∫–ª–∞—Å—Å–∞ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
        setTimeout(() => {
            itemDiv.classList.add('show');
        }, 10); // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞–Ω–∏–º–∞—Ü–∏–∏
    });
});
